/*
    VARIABLES
*/

$footer-height: 222px;
$browser-context: 16; // Default

$color1: #f7f6f5; //gray
$black: #000;
$orange: #ff6b23;


/*
    IMPORTS
*/

//noinspection CssUnknownTarget
@import "compass";
// SPRITES
//noinspection CssUnknownTarget
@import "compass/utilities/sprites";
//noinspection CssUnknownTarget
@import 'social-dark/*.png';
@import 'social-white/*.png';
//noinspection SassScssUnresolvedMixin
@include all-social-white-sprites;
@include all-social-dark-sprites;
// for sticky footer
//noinspection CssUnknownTarget
@import "compass/layout";
// for center alignment in footer
//noinspection CssUnknownTarget
@import "compass/css3";
//noinspection CssUnknownTarget
@import "compass/css3/inline-block";

/*
    MIXINS
*/
@import "fonts";

@mixin inlineblock($valine: top) {
  display: inline-block;
  vertical-align: $valine;
}

@mixin clearfix {
  &:before,
  &:after {
    content: '';
    display: block;
  }

  &:after {
    clear: both;
  }
}

@mixin transform($transforms...) {
  -webkit-transform: $transforms;
  -moz-transform: $transforms;
  -ms-transform: $transforms;
  -o-transform: $transforms;
  transform: $transforms;
}

@mixin border-radius($radius:5px) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;

  -webkit-background-clip: padding-box;
  -moz-background-clip: padding;
  background-clip: padding-box;
}

@mixin get-sprite($map, $sprite, $repeat: no-repeat, $height: true, $width: true) {
  $sprite-image: sprite-file($map, $sprite);
  $sprite-map: sprite-url($map);
  $sprite-position: sprite-position($map, $sprite);
  $sprite-layout: smart;

  background: $sprite-map $sprite-position $repeat;

  @if ($height == true) {
    $sprite-height: image-height($sprite-image);
    height: $sprite-height;
  }

  @if ($width == true) {
    $sprite-width: image-width($sprite-image);
    width: $sprite-width;
  }
}

@mixin absolute-center {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  position: absolute;
}

//noinspection CssInvalidFunction
@mixin insert_sprite($sprite-name){
  height: sprite-sprite-height($sprite-name);
  width: sprite-sprite-width($sprite-name);
  //noinspection SassScssUnresolvedMixin
  @include sprite-sprite($sprite-name);
}

// translation pixel to em
@function em($pixels, $context: $browser-context) {
  @if (unitless($pixels)) {
    $pixels: $pixels * 1px;
  }
  @if (unitless($context)) {
    $context: $context * 1px;
  }
  @return $pixels / $context * 1em;
}

@mixin set_font($font, $pixel, $color) {
  font-family: $font, sans-serif;
  font-size: em($pixel);
  color: $color;
}

/*
    STYLES
*/
html,
body{
  height: 100%;
  min-width: 1256px;
}

// stiky footer
.wrapper{
  position:relative;
  min-height:100%;
  height:auto!important;
  overflow:hidden;
}
.wrapper:after {
  content: "";
  height: $footer-height;
  display: block;
}


.bg{
  //noinspection CssUnknownTarget
  background-color: #f4f4f4;
  //background-image: url("/i/bg.png");
  //background-size: 100% auto;
}

.clearfix {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
  /* для IE6-7 */
  zoom: 1;
}

ul{
  margin: 0;
  padding: 0;
  list-style: none;

  a{
    text-decoration: none;
  }
}

.box{
  //noinspection SassScssUnresolvedMixin
  @include border-radius(3px);
  background-color: $color1;
  overflow: hidden;
  .header-1{
    //background-color: ;
    background: linear-gradient(to top, #a8a7a7, #7c7979);
    @include set_font("open_sansbold", 21, #eeedec);
    padding: 15px;
  }
}

.block{
  @extend .box;
  margin-bottom: 36px;
  &_content{
    padding: 36px;
  }
}

.wrapper{
  //@extend .wrap-common;
}
.content{
  float: right;
  width: 742px;
}

.middle{
  @extend .wrap-common;
}

.wrap-common{
  //min-width: 1100px;
  padding: 0 78px;

  max-width: 1100px;
  //min-width: 1100px;
  margin: 0 auto;
}

.main-title{
  margin-bottom: 28px;

  @include open-sans(bold);
  font-size: 20px;
}

$misc-sprite: sprite-map('misc/*.png', $spacing: 70px);